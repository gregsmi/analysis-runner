# This workflow is triggered after a new version of Hail has been built, with a
# corresponding conda package. It leads to new driver and server Docker images being
# built, followed by the deployment of the server.
name: Deploy analysis-runner server after Hail update
on:
  workflow_dispatch:
    inputs:
      hail_version:
        description: 'Hail version (as uploaded to Anaconda), e.g. 0.2.61'
        required: true

jobs:
  deploy_server:
    runs-on: ubuntu-latest

    env:
      # DOCKER_BUILDKIT: 1
      # BUILDKIT_PROGRESS: plain
      # CLOUDSDK_CORE_DISABLE_PROMPTS: 1
      DRIVER_IMAGE: ${{ secrets.REGISTRY_LOGIN_SERVER }}/analysis-runner/driver:${{ github.sha }}-hail-${{ github.event.inputs.hail_version }}
      SERVER_IMAGE: ${{ secrets.REGISTRY_LOGIN_SERVER }}/analysis-runner/server:${{ github.sha }}-hail-${{ github.event.inputs.hail_version }}

    steps:
    - name: "checkout repo"
      uses: actions/checkout@azure-enable

    # The SP credentials used here should have RG-scoped
    # Contributor access to allow the deploy in the final step.
    - name: 'azure CLI login'
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    # Credentials used for registry operations must have AcrPush role assignment on
    # the ACR. (Can use the same clientId and clientSecret from AZURE_CREDENTIALS.)
    - name: 'build and push driver image'
      uses: azure/docker-login@v1
      with:
        login-server: ${{ secrets.REGISTRY_LOGIN_SERVER }}
        username: ${{ secrets.REGISTRY_USERNAME }}
        password: ${{ secrets.REGISTRY_PASSWORD }}
    - run: |
        docker build --build-arg HAIL_VERSION=${{ github.event.inputs.hail_version }} --tag $DRIVER_IMAGE driver
        docker push $DRIVER_IMAGE

    - name: 'build and push server image'
      uses: azure/docker-login@v1
      with:
        login-server: ${{ secrets.REGISTRY_LOGIN_SERVER }}
        username: ${{ secrets.REGISTRY_USERNAME }}
        password: ${{ secrets.REGISTRY_PASSWORD }}
    - run: |
        docker build --build-arg DRIVER_IMAGE=$DRIVER_IMAGE --tag $SERVER_IMAGE server
        docker push $SERVER_IMAGE

    # - name: "deploy server-test"
    #   run: |
    #     gcloud run deploy server-test --region australia-southeast1 --no-allow-unauthenticated --platform managed --set-env-vars=DRIVER_IMAGE=$DRIVER_IMAGE --image $SERVER_IMAGE

    - name: 'deploy server'
      uses: azure/aci-deploy@v1
      with:
        resource-group: ${{ secrets.RESOURCE_GROUP }}
        # TODO parameterize name?
        dns-name-label: analysis-runner-srv0
        name: analysis-runner-srv0
        image: $SERVER_IMAGE
        registry-login-server: ${{ secrets.REGISTRY_LOGIN_SERVER }}
        registry-username: ${{ secrets.REGISTRY_USERNAME }}
        registry-password: ${{ secrets.REGISTRY_PASSWORD }}
        location: 'australia east'

    # - name: "deploy server"
    #   run: |
    #     gcloud run deploy server --region australia-southeast1 --no-allow-unauthenticated --platform managed --set-env-vars=DRIVER_IMAGE=$DRIVER_IMAGE,TZ=Australia/Sydney --image $SERVER_IMAGE
