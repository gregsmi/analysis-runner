name: Azure Deploy
on:
  workflow_dispatch:
    inputs:
      hail_ref:
        description: 'Hail repo ref (or commit SHA)'
        required: true
        default: "main"

jobs:
  deploy_server:
    runs-on: ubuntu-latest

    env:
      DEPLOYMENT_TYPE: prod

    steps:
    - name: "checkout analysis-runner repo"
      uses: actions/checkout@v3

    - name: "checkout Hail repo"
      uses: actions/checkout@v3
      with:
        repository: "populationgenomics/hail"
        ref: ${{ github.event.inputs.hail_ref }}
        path: "hail"

    - name: "Determine Hail SHA"
      run: |
        cd hail
        echo "HAIL_SHA=$(git rev-parse --short HEAD)" >> $GITHUB_ENV

    # Set up deployment location targets as environment variables based on deploy-config.json.
    - name: 'Set deployment location variables'
      run: |
        CONFIG_FILE=deploy-config.$DEPLOYMENT_TYPE.json
        echo "CPG_DEPLOY_CONFIG=$(cat $CONFIG_FILE | tr -s '\n' ' ')" >> $GITHUB_ENV
        SHORT_SHA=$(git rev-parse --short HEAD)

        # Set up container registry authentication for image push.
        AZURE_CR=$(jq -r .container_registry $CONFIG_FILE)
        echo "CLIENT_ID=$(echo '${{ secrets.AZURE_CREDENTIALS }}' | jq -r '.clientId')" >> $GITHUB_ENV
        echo "CLIENT_PWD=$(echo '${{ secrets.AZURE_CREDENTIALS }}' | jq -r '.clientSecret')" >> $GITHUB_ENV
        echo "AZURE_CR=$AZURE_CR" >> $GITHUB_ENV
        echo "SHORT_SHA=$SHORT_SHA" >> $GITHUB_ENV

        # Set up analyis-runner image names and web endpoints.
        echo "AR_DRIVER_IMAGE=$AZURE_CR/analysis-runner/images/driver" >> $GITHUB_ENV
        echo "AR_SERVER_IMAGE=$AZURE_CR/analysis-runner/images/server" >> $GITHUB_ENV
        echo "AR_IMAGE_TAG=${SHORT_SHA}-hail-${HAIL_SHA}" >> $GITHUB_ENV
        echo "AR_APP_NAME=main-web-$(jq -r .analysis_runner_project $CONFIG_FILE)" >> $GITHUB_ENV

    - name: 'Build and push driver image'
      uses: azure/docker-login@v1
      with:
        login-server: ${{ env.AZURE_CR }}
        username: ${{ env.CLIENT_ID }}
        password: ${{ env.CLIENT_PWD }}
    - run: |
        docker build \
          --tag ${AR_DRIVER_IMAGE}:${AR_IMAGE_TAG} \
          --build-arg DRIVER_BASE_CR=$AZURE_CR \
          --build-arg HAIL_SHA=$HAIL_SHA \
          --build-arg CPG_DEPLOY_CONFIG='$CPG_DEPLOY_CONFIG' \
          -f driver/Dockerfile.hail driver
        docker push ${AR_DRIVER_IMAGE}:${AR_IMAGE_TAG}

    - name: 'Build and push server image'
      uses: azure/docker-login@v1
      with:
        login-server: ${{ env.AZURE_CR }}
        username: ${{ env.CLIENT_ID }}
        password: ${{ env.CLIENT_PWD }}
    - run: |
        docker build \
          --tag ${AR_SERVER_IMAGE}:${AR_IMAGE_TAG} \
          --build-arg DRIVER_IMAGE=${AR_DRIVER_IMAGE}:${AR_IMAGE_TAG} \
          server
        docker push ${AR_SERVER_IMAGE}:${AR_IMAGE_TAG}

    # - name: "deploy server-test"
    #   run: |
    #     gcloud run deploy server-test --region australia-southeast1 --no-allow-unauthenticated --platform managed --set-env-vars=DRIVER_IMAGE=$DRIVER_IMAGE --image $SERVER_IMAGE

    - name: 'Login via Azure CLI'
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: 'Deploy analysis runner server to web app'
      uses: azure/webapps-deploy@v2
      with:
        app-name: ${{ env.AR_APP_NAME }}
        images: '${{ env.AR_SERVER_IMAGE }}:${{ env.AR_IMAGE_TAG }}'
